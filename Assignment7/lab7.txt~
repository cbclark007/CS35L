Laboratory 7: Managing a backported change

1. Get a copy of the diffutils repository: I went to the link in #1
and used the first command for an anonymous clone:

git clone https://git.savannah.gnu.org/git/diffutils.git

2. Log of changes to diffutil:

cd diffutils
git log > git-log.txt

3. list of tags with git tag:

git tag > git-tags.txt

4. Find a commit

First, I ran:
man git log

And found that I should use the --grep option.

Then, I ran:
git log --grep="maint: quote"

Output:
commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
Author: Paul Eggert <eggert@cs.ucla.edu>
Date:   Wed Jan 25 23:46:16 2012 -0800

    maint: quote 'like this' or "like this", not `like this'
    
    This is in response to a recent change in the GNU coding standards,
    which now suggest quoting 'like this' or "like this", instead of
    `like this' or ``like this''.
    * HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
    * doc/diffutils.texi, ms/config.bat, ms/config.site:
    * src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
    * src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
    * src/sdiff.c, src/side.c, src/system.h, src/util.c:
    * tests/help-version:
    Quote 'like this' or "like this" in commentary.
    * cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
    * man/help2man: Update to 1.40.4 version, with quoting fixed as above.
    * po/en.po: Remove translation involving `, as it's no longer needed.
    * src/cmp.c (try_help, specify_ignore_initial, usage, main):
    * src/diff.c (main, try_help, option_help_msgid, specify_value)
    (compare_files):
    * src/diff3.c (main, try_help, option_help_msgid, usage)
    (read_diff):
    * src/dir.c (compare_names):
    * src/sdiff.c (try_help, usage, check_child_status, main):
    * src/util.c (finish_output):
    * tests/help-version:
    Quote 'like this' in output.

So the commit is 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f

Now I have to figure out how to generate a patch. I look through the manual
page for git log and find the -patch option.

Next, to generate a patch for the commit, I run:
git log --patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f > quote-patch.txt

I then moved all the files I created up one directory out of the diffutils
folder (mv filename ../) because I figured it would interact with the git
with changes and stuff.

5. Check out version 3.0 of diffutils

git checkout v3.0

6. Use patch to apply quote-patch.txt to version 3.0

patch -p1 < ../quote-patch.txt

I got a number of messages saying that it couldn't find the file to patch, 
but I skipped them by pressing enter per the instructions. I also got
quite a few "Hunk #n FAILED at xxx". There didn't seem to be
other problems aside from those two that just appeared often during the patch.

7. I ran:

git status

Output:
HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  modified:   NEWS
  modified:   README
  modified:   TODO
  modified:   doc/diagmeet.note
  modified:   ms/config.bat
  modified:   ms/config.site
  modified:   po/en.po
  modified:   src/analyze.c
  modified:   src/cmp.c
  modified:   src/context.c
  modified:   src/diff.c
  modified:   src/diff.h
  modified:   src/diff3.c
  modified:   src/dir.c
  modified:   src/ifdef.c
  modified:   src/io.c
  modified:   src/sdiff.c
  modified:   src/side.c
  modified:   src/system.h
  modified:   src/util.c
  modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)
  NEWS.orig
  README-hacking.orig
  README-hacking.rej
  README.orig
  README.rej
  cfg.mk.orig
  cfg.mk.rej
  ms/config.site.orig
  src/cmp.c.orig
  src/context.c.orig
  src/diff.c.orig
  src/diff.c.rej
  src/diff.h.orig
  src/diff3.c.orig
  src/diff3.c.rej
  src/dir.c.orig
  src/sdiff.c.orig
  src/system.h.orig
  src/util.c.orig
  tests/help-version.orig

8. Emacs functions vc-diff and vc-revert

C-h a vc-diff
vc-diff displays diffs between file revisions

C-h a vc-revert
revert working copies of the selected fileset to their repository contents

diff-apply-hunk
Apply the current hunk to the source file and go to the next. 

diff-goto-source
Jump to the corresponding source line (From diff to source file)

9. Reverting changes 
I then reverted the changes using vc-diff (C-x v u) in the files:
NEWS, README, TODO, doc/diagmeet.note, ms/config.bat, ms/config.site,
po/en.po, src/diff.h, src/system.h, tests/help-version.

Now, when I run $ git status, I only have .c files in my output for modified
files:

HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  modified:   src/analyze.c
  modified:   src/cmp.c
  modified:   src/context.c
  modified:   src/diff.c
  modified:   src/diff3.c
  modified:   src/dir.c
  modified:   src/ifdef.c
  modified:   src/io.c
  modified:   src/sdiff.c
  modified:   src/side.c
  modified:   src/util.c

Next, I go through the .c files and undo the changes related to character
string constants. 

First, in src/analyze.c:
C-x v =
All the changes related to ' are in comments, so I reverted changes with 
C-c C-a
C-x C-c to exit

I then went through:
src/cmp.c, src/context.c, src/diff.c, src/diff3.c, src/dir.c, src/ifdef.c, 
src/io.c, src/sdiff.c, src/side.c, and src/util.c
and reverted changes for the weird accent related to anything but code
using the diff-apply-hunk command. This was mostly just reverting comments.

After processing these .c files, I ran git status, and there are only
6 modified files left, all of them being .c:
git status
output (only copied in the modified area)
HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  modified:   src/cmp.c
  modified:   src/diff.c
  modified:   src/diff3.c
  modified:   src/dir.c
  modified:   src/sdiff.c
  modified:   src/util.c

10. Examine the src/*.c.rej files

There are two src/*.c.rej files:
src/diff.c.rej
src/diff3.c.rej

First, I inspected src/diff.c.rej and found that therew ere multiple lines that
still had the bad quotation. So, I went back into diff and found each line
by searching for a key word in each line

C-s paginate
C-s ifdef=NAME
C-s LTYPE is
C-s FILE1 FILE2
C-s If a FILE is

And within each line, changing all the grave accents to the good quotes.

Then, I inspected src/diff3.c.rej and found one change to be made.

I went back into src/diff3.c and ran:

C-s commands to ed scripts

and edited the accent accordingly.

11. Removing untracked files

git clean -f

This removed all the untracked files.

12. Now, git status outputs:

HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  modified:   src/cmp.c
  modified:   src/diff.c
  modified:   src/diff3.c
  modified:   src/dir.c
  modified:   src/sdiff.c
  modified:   src/util.c

I then put the patch into a text file as specified:

git diff > ../quote-3.0-patch.txt

13. I looked at README-hacking and proceeded to follow the instructions in it.

First, I ran:
./bootstrap

Next, since I am on a linux server that requires the patch specified in the 
lab instructions, I download and apply the patch:

cd ..
wget https://web.cs.ucla.edu/classes/winter20/cs35L/assign/diffutils-gets.diff
cd diffutils
patch -p0 < ../diffutils-gets.diff

Then, I continue with the instructions in the readme:

./configure
make
make check

Afterwards, I verify that my diff command is working:
./src/diff . -
output:
./src/diff: cannot compare '-' to a directory

./src/diff --help
Outputs a lot, but I scrolled through and made sure there were no grave
marks in the output.

14. Sanity test time

I cloned in another diffutils and checked out to the v3.0 branch:
cd ..
mkdir diffutils-3.0
mkdir diffutils-3.0-patch
mkdir diffutils-compare
cd diffutils-compare
git clone https://git.savannah.gnu.org/git/diffutils.git
cd diffutils
git checkout v3.0
cd ../..
cp diffutils/src/*.c diffutils-3.0-patch
cp diffutils-compare/diffutils/src/*.c diffutils-3.0
./diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch > quote-3.0-test.txt

15. Comparing quote-3.0-test.txt and quote-3.0-patch.txt

diff quote-3.0-test.txt quote-3.0-patch.txt

There were various differences I found (aside from the expected changes to 
quotation marks). However, they did not seem to make a difference in terms
of functionality.

For example, there seemed to be some changes to how many parameters functions
took:
< @@ -134,7 +134,7 @@ specify_ignore_initial (int f, char **ar
---
> @@ -134,7 +134,7 @@ specify_ignore_initial (int f, char **argptr, char delimiter)

But, this is, as a TA on piazza said, "innocuous" because we're just worried
about the quote characters.
